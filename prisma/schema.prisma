generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cohort {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(255)
  courses     Course[]
  user_cohort User_Cohort[]
}

model Course {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(255)
  cohortid    Int
  cohort      Cohort        @relation(fields: [cohortid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_course User_Course[]

  @@unique([name, cohortid])
}

model User {
  uuid        String        @id @db.VarChar(255)
  username    String        @unique @db.VarChar(255)
  email       String        @unique @db.VarChar(255)
  firstname   String        @db.VarChar(255)
  lastname    String        @db.VarChar(255)
  isadmin     Boolean       @default(false)
  user_cohort User_Cohort[]
  user_course User_Course[]
  workspaces   Workspace[]
}

model User_Cohort {
  userid   String @db.VarChar(255)
  cohortid Int
  cohort   Cohort @relation(fields: [cohortid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user     User   @relation(fields: [userid], references: [uuid], onDelete: Cascade, onUpdate: NoAction)

  @@id([userid, cohortid])
}

model User_Course {
  userid   String @db.VarChar(255)
  courseid Int
  course   Course @relation(fields: [courseid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user     User   @relation(fields: [userid], references: [uuid], onDelete: Cascade, onUpdate: NoAction)

  @@id([userid, courseid])
}

model Workspace {
  uuid         String @id @db.VarChar(255)
  desiredcount Int
  userid       String @db.VarChar(255)
  user         User   @relation(fields: [userid], references: [uuid], onDelete: Cascade, onUpdate: NoAction)
}
