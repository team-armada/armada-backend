generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cohort {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(255)
  courses     Course[]
  user_cohort User_Cohort[]
}

model Course {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(255)
  cohortId    Int           @map("cohortid")
  cohort      Cohort        @relation(fields: [cohortId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_course User_Course[]

  @@unique([name, cohortId])
}

model User {
  uuid        String        @id @db.VarChar(255)
  username    String        @unique @db.VarChar(255)
  email       String        @unique @db.VarChar(255)
  firstName   String        @db.VarChar(255) @map("firstname")
  lastName    String        @db.VarChar(255) @map("lastname")
  isAdmin     Boolean       @default(false) @map("isadmin")
  user_cohort User_Cohort[]
  user_course User_Course[]
  workspaces   Workspace[]
}

model User_Cohort {
  userId   String @db.VarChar(255) @map("userid")
  cohortId Int @map("cohortid")
  cohort   Cohort @relation(fields: [cohortId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user     User   @relation(fields: [userId], references: [uuid], onDelete: Cascade, onUpdate: NoAction)

  @@id([userId, cohortId])
}

model User_Course {
  userId   String @db.VarChar(255) @map("userid")
  courseId Int    @map("courseid")
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user     User   @relation(fields: [userId], references: [uuid], onDelete: Cascade, onUpdate: NoAction)

  @@id([userId, courseId])
}

model Workspace {
  uuid         String @id @db.VarChar(255)
  desiredCount Int    @map("desiredcount")
  userId       String @db.VarChar(255) @map("userid")
  user         User   @relation(fields: [userId], references: [uuid], onDelete: Cascade, onUpdate: NoAction)
}
